{"version":3,"sources":["routes.js","containers/DefaultLayout/DefaultLayout.js"],"names":["routes","path","name","component","React","lazy","Promise","all","__webpack_require__","e","then","bind","DefaultFooter","DefaultHeader","DefaultLayout","loading","react_default","a","createElement","className","preventDefault","this","props","history","push","_this2","es","react","fallback","onLogout","signOut","Container","fluid","Switch","map","route","idx","Route","key","exact","render","Redirect","from","to","Component"],"mappings":"0MASeA,EAJA,CACb,CAAEC,KAAM,IAAKC,KAAM,YAAaC,UAJjBC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,eCM5BC,EAAgBR,IAAMC,KAAK,kBAAMG,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,aACjCE,EAAgBT,IAAMC,KAAK,kBAAMG,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,aAEjCG,6MAEJC,QAAU,kBAAMC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCAAf,sFAERV,GACNA,EAAEW,iBACFC,KAAKC,MAAMC,QAAQC,KAAK,2CAGjB,IAAAC,EAAAJ,KACP,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWP,UAAU,WACnBH,EAAAC,EAAAC,cAACS,EAAA,SAAD,CAAWC,SAAUP,KAAKN,WACxBC,EAAAC,EAAAC,cAACL,EAAD,CAAegB,SAAU,SAAApB,GAAC,OAAEgB,EAAKK,QAAQrB,QAG7CO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACdH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAWC,OAAK,GACdhB,EAAAC,EAAAC,cAACS,EAAA,SAAD,CAAUC,SAAUP,KAAKN,WACvBC,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACGjC,EAAOkC,IAAI,SAACC,EAAOC,GAClB,OAAOD,EAAMhC,UACXa,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEC,IAAKF,EACLnC,KAAMkC,EAAMlC,KACZsC,MAAOJ,EAAMI,MACbrC,KAAMiC,EAAMjC,KACZsC,OAAQ,SAAAlB,GAAK,OACXN,EAAAC,EAAAC,cAACiB,EAAMhC,UAAcmB,MAEtB,OAGPN,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAUC,KAAK,IAAIC,GAAG,WAMhC3B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACS,EAAA,SAAD,CAAUC,SAAUP,KAAKN,WACvBC,EAAAC,EAAAC,cAACN,EAAD,gBA5CgBgC,aAoDb9B","file":"static/js/8.7fe221d8.chunk.js","sourcesContent":["import React from 'react';\n\nconst MDediter = React.lazy(() => import('./MDediter'));\n\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\nconst routes = [\n  { path: '/', name: 'MD editer', component: MDediter }\n];\n\nexport default routes;\n","import React, { Component, Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Container } from 'reactstrap';\n\nimport { AppFooter,AppHeader } from '@coreui/react';\n// routes config\nimport routes from '../../routes';\n\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\n\nclass DefaultLayout extends Component {\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  signOut(e) {\n    e.preventDefault()\n    this.props.history.push('/login')\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        {/* ヘッダーをコメントアウト */}\n        <AppHeader className=\"bg-info\">\n          <Suspense  fallback={this.loading()} >\n            <DefaultHeader onLogout={e=>this.signOut(e)} />\n          </Suspense>\n        </AppHeader>\n        <div className=\"app-body\">\n          <main className=\"main\">\n            <Container fluid>\n              <Suspense fallback={this.loading()}>\n                <Switch>\n                  {routes.map((route, idx) => {\n                    return route.component ? (\n                      <Route\n                        key={idx}\n                        path={route.path}\n                        exact={route.exact}\n                        name={route.name}\n                        render={props => (\n                          <route.component {...props} />\n                        )} />\n                    ) : (null);\n                  })}\n                  {/* MDediterをトップ画面に変更 */}\n                  <Redirect from=\"/\" to=\"/\" />\n                </Switch>\n              </Suspense>\n            </Container>\n          </main>\n        </div>\n        <AppFooter>\n          <Suspense fallback={this.loading()}>\n            <DefaultFooter />\n          </Suspense>\n        </AppFooter>\n      </div>\n    );\n  }\n}\n\nexport default DefaultLayout;\n"],"sourceRoot":""}